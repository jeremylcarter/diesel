(defconventions :domainevents {:inherit [Test.Diesel.IDomainEvent]})

(namespace Employees
	(defvaluetype EmployeeNumber int)
	(defcommand ChangeTelephoneNumber (string TelephoneNumber)))

(namespace Clients 
	(defvaluetype ClientId)
	(defapplicationservice ImportService
		(defcommand ImportClient (int ClientId, string Name))))

(namespace TestCases.TypeDeclarations
	(defcommand PrintInt (int Value))
	(defcommand PrintNullable (float? Value))
	(defcommand PrintArraySimple (int[] Value))
	(defcommand PrintNullableSimple (decimal? Value))
	(defcommand PrintString (string Value))
	(defcommand PrintNamedTypeQualifiedDateTime (System.DateTime Value))
	(defcommand PrintNamedTypeQualifiedGuid (System.Guid Value))
	(defcommand PrintNamedTypeUnqualifiedGuid (Guid Value))
	(defcommand PrintNamedTypeUnqualifiedDecimal (Decimal Value))
	(defcommand PrintMulti (string Text, int? NullableNumber, string[] SingleDimArray, decimal Decimal, DateTime When)))


(namespace TestCases.Defvaluetype
	(defvaluetype InvoiceNumber)
	(defvaluetype Amount decimal)
	(defvaluetype LineItemNumber (int Value))
	(defvaluetype Name (string FirstName, string LastName))
	(defvaluetype SourceMetadata (string Source, int? SourceId)))

(namespace TestCases.Defcommand
	(defcommand PrintString (string Name))
	(defcommand PrintNullable (int? Value))
	(defcommand PrintMultiple (string First, string Last))
	(defcommand PrintDateTime (DateTime OccurredOn))
	(defcommand PrintGuid (Guid SourceId)))

(namespace TestCases.Defdomainevent
	(defdomainevent PaymentReceived (Guid Id, Decimal Amount, String Currency)))
